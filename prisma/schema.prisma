// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Product {
  id       Int    @id @default(autoincrement())
  title    String @unique
  desc     String @db.Text
  image    String
  filename String @default("test.png")
}

model Portofolio {
  id       Int    @id @default(autoincrement())
  title    String
  desc     String @db.Text
  image    String
  filename String
}

model Service {
  id       Int     @id @default(autoincrement())
  title    String
  desc     String? @db.Text
  link     String
  logo     String
  filename String
}

model Testimony {
  id       Int    @id @default(autoincrement())
  username String
  location String
  comment  String @db.Text
  rating   Float
  avatar   String
  filename String
}

model Hero {
  id       Int     @id @default(autoincrement())
  number   Int?
  position String
  text     String
  hText    String?
  desc     String?
}

model User {
  id            String         @id @default(uuid())
  name          String
  username      String
  email         String         @unique
  password      String
  job           String?
  token         String?        @db.VarChar(100)
  avatar        String
  bio           String?        @db.Text
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Partnership {
  id       Int     @id @default(autoincrement())
  name     String?
  image    String
  filename String
}

model noiu_in_number {
  id        Int @id @default(autoincrement())
  client    Int
  produk    Int
  pekerjaan Int
  tim       Int
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
